---
Checks: >
  -*,
  bugprone-macro-parentheses,
  bugprone-bool-pointer-implicit-conversion,
  -bugprone-implicit-widening-of-multiplication-result,
  bugprone-misplaced-operator-in-strlen-in-alloc,
  bugprone-not-null-terminated-result,
  bugprone-redundant-branch-condition,
  bugprone-suspicious-memset-usage,
  bugprone-terminating-continue,
  bugprone-too-small-loop-variable,

# -bugprone-*,
# -clang-diagnostic-*,
# -clang-analyzer-*,
# -readability-*,
# -clang-diagnostic-unused-command-line-argument,
# -clang-diagnostic-error,
# -readability-uppercase-literal-suffix,
# -bugprone-suspicious-missing-comma,
# -bugprone-reserved-identifier,

WarningsAsErrors: >
  *,

# FormatStyle:     Google
CheckOptions:
  - { key: bugprone-easily-swappable-parameters.ModelImplicitConversions, value: 'false' }
#   - key:             clang-diagnostic-unused-command-line-argument
#     value:           'false'
#   - key:             llvm-else-after-return.WarnOnConditionVariables
#     value:           'false'
#   - key:             modernize-loop-convert.MinConfidence
#     value:           reasonable
#   - key:             modernize-replace-auto-ptr.IncludeStyle
#     value:           llvm
#   - key:             cert-str34-c.DiagnoseSignedUnsignedCharComparisons
#     value:           'false'
#   - key:             google-readability-namespace-comments.ShortNamespaceLines
#     value:           '10'
#   - key:             cert-err33-c.CheckedFunctions
#     value:           '::aligned_alloc;::asctime_s;::at_quick_exit;::atexit;::bsearch;::bsearch_s;::btowc;::c16rtomb;::c32rtomb;::calloc;::clock;::cnd_broadcast;::cnd_init;::cnd_signal;::cnd_timedwait;::cnd_wait;::ctime_s;::fclose;::fflush;::fgetc;::fgetpos;::fgets;::fgetwc;::fopen;::fopen_s;::fprintf;::fprintf_s;::fputc;::fputs;::fputwc;::fputws;::fread;::freopen;::freopen_s;::fscanf;::fscanf_s;::fseek;::fsetpos;::ftell;::fwprintf;::fwprintf_s;::fwrite;::fwscanf;::fwscanf_s;::getc;::getchar;::getenv;::getenv_s;::gets_s;::getwc;::getwchar;::gmtime;::gmtime_s;::localtime;::localtime_s;::malloc;::mbrtoc16;::mbrtoc32;::mbsrtowcs;::mbsrtowcs_s;::mbstowcs;::mbstowcs_s;::memchr;::mktime;::mtx_init;::mtx_lock;::mtx_timedlock;::mtx_trylock;::mtx_unlock;::printf_s;::putc;::putwc;::raise;::realloc;::remove;::rename;::scanf;::scanf_s;::setlocale;::setvbuf;::signal;::snprintf;::snprintf_s;::sprintf;::sprintf_s;::sscanf;::sscanf_s;::strchr;::strerror_s;::strftime;::strpbrk;::strrchr;::strstr;::strtod;::strtof;::strtoimax;::strtok;::strtok_s;::strtol;::strtold;::strtoll;::strtoul;::strtoull;::strtoumax;::strxfrm;::swprintf;::swprintf_s;::swscanf;::swscanf_s;::thrd_create;::thrd_detach;::thrd_join;::thrd_sleep;::time;::timespec_get;::tmpfile;::tmpfile_s;::tmpnam;::tmpnam_s;::tss_create;::tss_get;::tss_set;::ungetc;::ungetwc;::vfprintf;::vfprintf_s;::vfscanf;::vfscanf_s;::vfwprintf;::vfwprintf_s;::vfwscanf;::vfwscanf_s;::vprintf_s;::vscanf;::vscanf_s;::vsnprintf;::vsnprintf_s;::vsprintf;::vsprintf_s;::vsscanf;::vsscanf_s;::vswprintf;::vswprintf_s;::vswscanf;::vswscanf_s;::vwprintf_s;::vwscanf;::vwscanf_s;::wcrtomb;::wcschr;::wcsftime;::wcspbrk;::wcsrchr;::wcsrtombs;::wcsrtombs_s;::wcsstr;::wcstod;::wcstof;::wcstoimax;::wcstok;::wcstok_s;::wcstol;::wcstold;::wcstoll;::wcstombs;::wcstombs_s;::wcstoul;::wcstoull;::wcstoumax;::wcsxfrm;::wctob;::wctrans;::wctype;::wmemchr;::wprintf_s;::wscanf;::wscanf_s;'
#   - key:             cert-oop54-cpp.WarnOnlyIfThisHasSuspiciousField
#     value:           'false'
#   - key:             cert-dcl16-c.NewSuffixes
#     value:           'L;LL;LU;LLU'
#   - key:             google-readability-braces-around-statements.ShortStatementLines
#     value:           '1'
#   - key:             cppcoreguidelines-non-private-member-variables-in-classes.IgnoreClassesWithAllMemberVariablesBeingPublic
#     value:           'true'
#   - key:             google-readability-namespace-comments.SpacesBeforeComments
#     value:           '2'
#   - key:             modernize-loop-convert.MaxCopySize
#     value:           '16'
#   - key:             modernize-pass-by-value.IncludeStyle
#     value:           llvm
#   - key:             modernize-use-nullptr.NullMacros
#     value:           'NULL'
#   - key:             llvm-qualified-auto.AddConstToQualified
#     value:           'false'
#   - key:             modernize-loop-convert.NamingStyle
#     value:           CamelCase
#   - key:             llvm-else-after-return.WarnOnUnfixable
#     value:           'false'
#   - key:             google-readability-function-size.StatementThreshold
#     value:           '800'
# The following check options are obtained from
# # https://gist.github.com/airglow923/1fa3bda42f2b193920d7f46ee8345e04
#   - { key: readability-identifier-naming.ClassCase,                       value:           CamelCase }
#   - { key: readability-identifier-naming.ClassMemberCase,                 value:           lower_case }
  # - { key: readability-identifier-naming.ConstexprVariableCase,           value:           CamelCase }
  # - { key: readability-identifier-naming.ConstexprVariablePrefix,         value:           k }
  # - { key: readability-identifier-naming.EnumCase,                        value:           CamelCase }
  # - { key: readability-identifier-naming.EnumConstantCase,                value:           CamelCase }
  # - { key: readability-identifier-naming.EnumConstantPrefix,              value:           k }
  # - { key: readability-identifier-naming.FunctionCase,                    value:           CamelCase }
  # - { key: readability-identifier-naming.GlobalConstantCase,              value:           camelBack }
  # - { key: readability-identifier-naming.GlobalConstantIgnoredRegexp,    value:           '[A-Z|_]+strings' } #Ignore BOARD_REV_strings[] type variables
  # - { key: readability-identifier-naming.GlobalConstantPrefix,            value:           k }
  # - { key: readability-identifier-naming.StaticConstantCase,              value:           CamelCase }
  # - { key: readability-identifier-naming.StaticConstantPrefix,            value:           k }
  # - { key: readability-identifier-naming.StaticVariableCase,              value:           camelBack }
  # - { key: readability-identifier-naming.StaticVariableIgnoredRegexp,    value:           '[A-Z]+_.*\[\]' } #Ignore BOARD_REV_strings[] type variables
  # - { key: readability-identifier-naming.MacroDefinitionCase,             value:           UPPER_CASE }
  # - { key: readability-identifier-naming.MacroDefinitionIgnoredRegexp,    value:           '^[_,0-9,A-Z]+HPP_$' }
  # - { key: readability-identifier-naming.MemberCase,                      value:           lower_case }
  # - { key: readability-identifier-naming.PrivateMemberSuffix,             value:           _ }
  # - { key: readability-identifier-naming.PublicMemberSuffix,              value:           '' }
  # - { key: readability-identifier-naming.NamespaceCase,                   value:           lower_case }
  # - { key: readability-identifier-naming.ParameterCase,                   value:           camelBack }
  # - { key: readability-identifier-naming.TypeAliasCase,                   value:           CamelCase }
  # - { key: readability-identifier-naming.TypedefCase,                     value:           CamelCase }
  # - { key: readability-identifier-naming.typedefSuffix,                   value:           _t }
  # - { key: readability-identifier-naming.VariableCase,                    value:           camelBack }
  # - { key: readability-identifier-naming.IgnoreMainLikeFunctions,         value:           1 }
  # - { key: readability-identifier-naming.AbstractClassCase,               value:           CamelCase }
  # - { key: readability-identifier-naming.AbstractClassPrefix,             value:           i }
  # - { key: readability-function-cognitive-complexity.IgnoreMacros,        value: 1   }
...
